package forkable
 
/**
 * Интерфейс для объектов способных *разделиться*, то есть выдать набор 
 * объектов, ведущих себя как клоны изначального объекта, но при этом по возможности 
 * использующие общие ресурсы, например один и тот же поток входных данных.
 * 
 * Для упрощения реализации было принято решение, что после однократного вызова fork(Int)
 * объект может стать *заблокированным* и любые взаимодействия с ним могут привести к 
 * forkable.AlreadyForkedException 
 */
interface Forkable<T>{
  /**
   * Получить *count* клонов данного объекта. Сам объект после этого может блокироваться 
   * и вызовы его методов могут выбрасывать исключения
   */
  public fun fork(count: Int): Iterable<Forkable<T>>

  /**
   * Узнать, заблокировано ли дерево (вызывался ли метод fork)
   */
  public fun isBlocked(): Boolean
}